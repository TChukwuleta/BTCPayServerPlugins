@using BTCPayServer.Abstractions.Services
@using BTCPayServer.Plugins.NairaCheckout.PaymentHandlers
@using BTCPayServer.Plugins.NairaCheckout.Services
@using System.Globalization
@inject Safe safe
@inject MavapayApiClientService mavapayClient;
@model BTCPayServer.Models.InvoicingModels.CheckoutModel
@{
    string errorMessage = string.Empty;
    string accountName = string.Empty;
    string bankName = string.Empty;
    string accountNumber = string.Empty;
    if (Model.InvoiceCurrency != "NGN")
    {
        errorMessage = "Checkout is available for only naira";
    }
    decimal.TryParse(Model.OrderAmount, NumberStyles.Number, CultureInfo.InvariantCulture, out decimal amount);
    var apiKey = "ss";
    string invoice = "lnurl";
    if (string.IsNullOrEmpty(errorMessage))
    {
        var createQuoteResponse = await mavapayClient.NairaCheckout(apiKey, amount, invoice);
        if (!string.IsNullOrEmpty(createQuoteResponse.ErrorMessage))
        {
            errorMessage = createQuoteResponse.ErrorMessage;
        }
        bankName = createQuoteResponse.BankName;
        accountName = createQuoteResponse.AccountName;
        accountNumber = createQuoteResponse.AccountNumber;
    }
}

<template id="@NairaCheckoutModelExtension.CheckoutBodyComponentName">
    <div class="text-center mt-4">
        <template v-if="!errorMessage">
            <h5 class="fw-bold text-primary mb-3">Pay with Bank Transfer</h5>
            <p class="mb-4 text-muted">
                To complete your payment, kindly make a transfer to the following bank account:
            </p>

            <div class="card border-0 shadow-sm p-4 bg-light mx-auto" style="max-width: 400px;">
                <p class="mb-2">
                    <strong class="text-dark">Bank Name:</strong><br>
                    <span class="fs-5 text-secondary">{{ bankName }}</span>
                </p>
                <p class="mb-2">
                    <strong class="text-dark">Account Name:</strong><br>
                    <span class="fs-5 text-secondary">{{ accountName }}</span>
                </p>
                <p class="mb-0">
                    <strong class="text-dark">Account Number:</strong><br>
                    <span class="fs-5 text-secondary">{{ accountNumber }}</span>
                </p>
            </div>
        </template>

        <template v-else>
            <div class="alert alert-danger fw-bold" role="alert">
                {{ errorMessage }}
            </div>
        </template>
    </div>
</template>


<script>
    Vue.component(@safe.Json(NairaCheckoutModelExtension.CheckoutBodyComponentName), {
        props: ['model', 'nfcSupported', 'nfcScanning', 'nfcErrorMessage', 'nfcWarningMessage'],
        template: @safe.Json("#" + NairaCheckoutModelExtension.CheckoutBodyComponentName),
        components: {
            qrcode: VueQrcode
        },
        data() {
            // currentTab is needed for backwards-compatibility with old plugin versions
            return {
                currentTab: undefined,
                bankName: @safe.Json(bankName),
                accountName: @safe.Json(accountName),
                accountNumber: @safe.Json(accountNumber),
                errorMessage: @safe.Json(errorMessage)
            };
        }
    });
</script>