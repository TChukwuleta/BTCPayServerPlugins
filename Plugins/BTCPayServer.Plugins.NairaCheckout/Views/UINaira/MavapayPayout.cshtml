@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.PayoutProcessors
@using BTCPayServer.Payouts
@using BTCPayServer.Plugins.NairaCheckout
@using BTCPayServer.Plugins.NairaCheckout.ViewModels
@using BTCPayServer.Plugins.NairaCheckout.Views
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Routing
@inject IEnumerable<IPayoutProcessorFactory> PayoutProcessorFactories
@inject PayoutProcessorService PayoutProcessorService
@inject IHttpContextAccessor HttpContextAccessor
@inject IScopeProvider ScopeProvider
@inject LinkGenerator LinkGenerator
@model MavapayPayoutViewModel
@{
    ViewData.SetActivePage(PluginNavPages.Index, "Mavapay Payout");
    var storeId = ScopeProvider.GetCurrentStoreId();
    PayoutMethodId pmi = PayoutTypes.LN.GetPayoutMethodId("BTC");
    PayoutMethodId pmichain = PayoutTypes.CHAIN.GetPayoutMethodId("BTC");
    string PayoutProcessorLink = LinkGenerator.GetUriByAction(HttpContextAccessor.HttpContext, "ConfigureStorePayoutProcessors", "UIPayoutProcessors", new { StoreId = storeId });
    var fetchProcessors = PayoutProcessorService.GetProcessors(new PayoutProcessorService.PayoutProcessorQuery()
    {
        Stores = new[] { storeId },
        PayoutMethods = new[] { pmi, pmichain }
    });
    var NoPayoutProcessors = PayoutProcessorFactories.Any(factory => factory.GetSupportedPayoutMethods().Contains(pmi)) && (await fetchProcessors).All(data =>
                !new[] { pmi, pmichain }.Contains(data.GetPayoutMethodId()));
}

<div class="sticky-header">
    <h2 text-translate="true">@ViewData["Title"]</h2>
    <div class="d-flex gap-3 mt-3 mt-sm-0">
        <a asp-controller="UINaira" asp-action="ListMavapayPayouts" asp-route-storeId="@storeId" class="btn btn-primary" role="button">View Payouts</a>
    </div>
</div>

@if (NoPayoutProcessors)
{
    <div class="alert alert-warning mb-5" role="alert">
        An automated payout processor is required in order to automate Mavapay payouts. <a class="alert-link p-0" href="@PayoutProcessorLink">Configure now</a>
    </div>
}

<partial name="_StatusMessage" />

<div>
    <ul class="nav nav-tabs" id="payoutTabs" role="tablist">
        <li class="nav-item">
            <button class="nav-link active" id="ngn-tab" data-bs-toggle="tab" data-bs-target="#ngn" type="button" role="tab">NGN</button>
        </li>
        <li class="nav-item">
            <button class="nav-link" id="kes-tab" data-bs-toggle="tab" data-bs-target="#kes" type="button" role="tab">KES</button>
        </li>
        <li class="nav-item">
            <button class="nav-link" id="zar-tab" data-bs-toggle="tab" data-bs-target="#zar" type="button" role="tab">ZAR</button>
        </li>
    </ul>

    <div class="tab-content mt-3">
        <div class="tab-pane show active" id="ngn" role="tabpanel">
            <form asp-action="ProcessNGNPayout" asp-route-storeId=@storeId method="post">
                <div class="mb-3 w-50">
                    <label class="form-label">Bank</label>
                    <select asp-items="Model.NGNBanks" asp-for="NGN.BankCode" class="form-select"></select>
                </div>
                <div class="mb-3 w-50">
                    <label>Account Number</label>
                    <div class="input-group">
                        <input asp-for="NGN.AccountNumber" class="form-control" maxlength="10" />
                        <button type="submit" formaction="@Url.Action("ValidateNgnAccountNumber", "UINaira", new { storeId })" class="btn btn-outline-primary">
                            Validate
                        </button>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.NGN?.AccountName))
                    {
                        <span class="text-muted">@Model.NGN.AccountName</span>
                    }
                    <span asp-validation-for="NGN.AccountNumber" class="text-danger"></span>
                </div>
                <div class="mb-3 w-50">
                    <label>Amount</label>
                    <input asp-for="NGN.Amount" type="number" step="1" class="form-control" required />
                </div>
                <button type="submit" class="btn btn-success">Send NGN Payout</button>
            </form>
        </div>


        <div class="tab-pane" id="kes" role="tabpanel">
            <form asp-action="ProcessKESPayout" asp-route-storeId=@storeId method="post">
                <div class="mb-3 w-50">
                    <label>Payout Method</label>
                    <select asp-items="Model.KESPaymentMethod" asp-for="KES.Method" class="form-select" id="kesMethod"></select>
                </div>

                <div id="kesAccountNumber" class="mb-3 w-50 d-none">
                    <label>Account Number</label>
                    <input asp-for="KES.AccountNumber" class="form-control" />
                </div>

                <div class="mb-3 w-50">
                    <label>Till/Bill/Phone Number</label>
                    <input asp-for="KES.Identifier" class="form-control" required />
                </div>

                <div class="mb-3 w-50">
                    <label>Amount</label>
                    <input asp-for="KES.Amount" type="number" step="1" class="form-control" required />
                </div>

                <button type="submit" class="btn btn-success">Send KES Payout</button>
            </form>
        </div>


        <div class="tab-pane" id="zar" role="tabpanel">
            <form asp-action="ProcessZARPayout" asp-route-storeId=@storeId method="post">
                <div class="mb-3 w-50">
                    <label class="form-label">Bank</label>
                    <select asp-items="Model.ZARBanks" asp-for="ZAR.Bank" class="form-select"></select>
                </div>
                <div class="mb-3 w-50">
                    <label>Account Name</label>
                    <input asp-for="ZAR.AccountName" class="form-control" required />
                </div>
                <div class="mb-3 w-50">
                    <label>Bank Account Number</label>
                    <input asp-for="ZAR.AccountNumber" class="form-control" required />
                </div>
                <div class="mb-3 w-50">
                    <label>Amount</label>
                    <input asp-for="ZAR.Amount" type="number" step="1" class="form-control" required />
                </div>
                <button type="submit" class="btn btn-primary">Send ZAR Payout</button>
            </form>
        </div>
    </div>
</div>



@section PageFootContent {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const methodSelect = document.getElementById("kesMethod");
            const accountNumberDiv = document.getElementById("kesAccountNumber");

            function toggleAccountNumber() {
                if (methodSelect.value === "BillNumber") {
                    accountNumberDiv.classList.remove("d-none");
                    accountNumberDiv.querySelector("input").setAttribute("required", "required");
                } else {
                    accountNumberDiv.classList.add("d-none");
                    accountNumberDiv.querySelector("input").removeAttribute("required");
                }
            }

            methodSelect.addEventListener("change", toggleAccountNumber);
            toggleAccountNumber();
        });
    </script>
}