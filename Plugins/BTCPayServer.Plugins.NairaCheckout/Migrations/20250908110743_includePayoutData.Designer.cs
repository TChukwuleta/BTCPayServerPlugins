// <auto-generated />
using System;
using BTCPayServer.Plugins.NairaCheckout;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BTCPayServer.Plugins.NairaCheckout.Migrations
{
    [DbContext(typeof(NairaCheckoutDbContext))]
    [Migration("20250908110743_includePayoutData")]
    partial class includePayoutData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BTCPayServer.Plugins.NairaCheckout.Data.MavapaySetting", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("IntegratedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StoreId")
                        .HasColumnType("text");

                    b.Property<string>("StoreName")
                        .HasColumnType("text");

                    b.Property<string>("WebhookSecret")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MavapaySettings");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.NairaCheckout.Data.NairaCheckoutOrder", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Amount")
                        .HasColumnType("text");

                    b.Property<bool>("BTCPayMarkedPaid")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExternalHash")
                        .HasColumnType("text");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceStatus")
                        .HasColumnType("text");

                    b.Property<string>("StoreId")
                        .HasColumnType("text");

                    b.Property<bool>("ThirdPartyMarkedPaid")
                        .HasColumnType("boolean");

                    b.Property<string>("ThirdPartyStatus")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("NairaCheckoutOrders");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.NairaCheckout.Data.NairaCheckoutSetting", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("WalletName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NairaCheckoutSettings");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.NairaCheckout.Data.PayoutTransaction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseCurrency")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean");

                    b.Property<string>("Provider")
                        .HasColumnType("text");

                    b.Property<string>("PullPaymentId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PayoutTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
