@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Abstractions.Services
@using BTCPayServer.Client
@using BTCPayServer.Controllers
@using BTCPayServer.Plugins.GhostPlugin.Data
@using BTCPayServer.Plugins.GhostPlugin.ViewModels
@using Microsoft.AspNetCore.Routing
@inject IScopeProvider ScopeProvider
@model GhostSettingViewModel
@{
    ViewData.SetActivePage(PluginNavPages.Index, "Ghost");
    var ghostCredsSet = Model?.IntegratedAt.HasValue is true;
    var storeId = ScopeProvider.GetCurrentStoreId();
}

<div class="sticky-header-setup"></div>
<div class="sticky-header d-sm-flex align-items-center justify-content-between">
    <h2 class="mb-0">@ViewData["Title"]</h2>
    @if (ghostCredsSet)
    {
        <div class="d-flex gap-3 mt-3 mt-sm-0">
            <a asp-controller="UIGhost" asp-action="Settings" asp-route-storeId="@Model.StoreId" class="btn btn-primary">Settings</a>
        </div>
    }
</div>

<partial name="_StatusMessage" />

@if (Model.HasWallet)
{
    <div class="row">
        <div class="col-xxl-constrain col-xl-8">
            @if (!ViewContext.ModelState.IsValid)
            {
                <div asp-validation-summary="All"></div>
            }

            <form method="post" id="ghostForm">
                <div class="form-group">
                    <label asp-for="ApiUrl" class="form-label"></label>
                    <div class="input-group">
                        <span class="input-group-text">https://</span>
                        <input asp-for="ApiUrl" class="form-control" readonly="@ghostCredsSet" />
                    </div>
                    <span asp-validation-for="ApiUrl" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ContentApiKey" class="form-label"></label>
                    <input asp-for="ContentApiKey" class="form-control" readonly="@ghostCredsSet" />
                    <span asp-validation-for="ContentApiKey" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="AdminApiKey" class="form-label"></label>
                    <input asp-for="AdminApiKey" class="form-control" type="password" value="@Model?.AdminApiKey" readonly="@ghostCredsSet" />
                    <span asp-validation-for="AdminApiKey" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Username" class="form-label"></label>
                    <input asp-for="Username" class="form-control" readonly="@ghostCredsSet" />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" class="form-control" type="password" value="@Model?.Password" readonly="@ghostCredsSet" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="WebhookSecret" class="form-label"></label>
                    <div class="input-group">
                        <input asp-for="WebhookSecret" class="form-control" required />
                        @if (ghostCredsSet)
                        {
                            <button name="command" type="submit" class="btn btn-primary" value="GhostUpdateWebhookSecret">Update</button>
                        }
                    </div>
                    <span asp-validation-for="WebhookSecret" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="WebhookUrl" class="form-label"></label>
                    <input asp-for="WebhookUrl" class="form-control" readonly= />
                </div>

                @if (ghostCredsSet)
                {
                    
                    <div class="form-group">
                        <label asp-for="MemberCreationUrl" class="form-label"></label>
                        <input asp-for="MemberCreationUrl" class="form-control" readonly />
                    </div>
                    <div class="form-group">
                        <label asp-for="DonationUrl" class="form-label"></label>
                        <input asp-for="DonationUrl" class="form-control" readonly />
                    </div>

                    
                    <div class="alert alert-warning">
                        <h5 class="alert-heading">In Ghost admin portal, please do the following …</h5> 
                        <ul>
                            <li>
                                Paste this script at <a href="https://@Model.ApiUrl/ghost/#/settings/code-injection" class="fw-bold alert-link" target="_blank" rel="noreferrer noopener">Settings &gt; Code Injection &gt; Open &gt; Site header</a>:
                                <pre class="mt-2 mb-0 text-wrap">@($"<script src='{Url.Action("GetBtcPayGhostPaywallJavascript", "UIGhostPublic", new { storeId }, Context.Request.Scheme)}'></script>")</pre>
                            </li>
                        </ul>
                    </div>

                    <p class="alert alert-success">
                        Orders on <b>@Model.ApiUrl</b> will be marked as paid on successful invoice payment.
                        Started: @Model.IntegratedAt.Value.ToBrowserDate()
                    </p>

                    <button name="command" type="submit" class="btn btn-danger mt-3" value="GhostClearCredentials">
                        Stop Ghost calls and clear credentials
                    </button>
                }
                else
                {
                    <button name="command" type="submit" class="btn btn-primary mt-3" value="GhostSaveCredentials">
                        Save
                    </button>
                }
            </form>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning alert-dismissible mb-4" role="alert">
        <p class="mb-0" style="font-size: 0.9rem;">
            To proceed with Ghost plugin on this store, you need to
            <a href="@Url.Action(nameof(UIStoresController.SetupWallet), "UIStores", new { cryptoCode = Model.CryptoCode, storeId = Model.StoreId })" class="alert-link">
                set up a wallet
            </a>
            first.
        </p>
    </div>
}

