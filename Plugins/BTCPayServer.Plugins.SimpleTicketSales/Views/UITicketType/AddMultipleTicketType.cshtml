@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using System.Globalization
@using BTCPayServer.Plugins.SimpleTicketSales.Data
@using BTCPayServer.Plugins.SimpleTicketSales.ViewModels
@inject IFileService FileService
@inject IScopeProvider ScopeProvider
@model List<TicketTypeViewModel>
@{
    Layout = "_Layout";
    ViewData.SetActivePage(PluginNavPages.Index, "Ticket Types");
    var canUpload = await FileService.IsAvailable();
    var storeId = ScopeProvider.GetCurrentStoreId();
    bool isEditMode = !string.IsNullOrEmpty(Model.First().TicketTypeId);
    string formAction = isEditMode
        ? Url.Action("UpdateTicketType", "UITicketType", new { eventId = Model.First().EventId, storeId, ticketTypeId = Model.First().TicketTypeId })
        : Url.Action("CreateTicketType", "UITicketType", new { eventId = Model.First().EventId, storeId });
}

<div class="sticky-header">
    <h2 text-translate="true">@ViewData["Title"]</h2>
    <div class="d-flex gap-3 mt-3 mt-sm-0">
        <a id="create-event" asp-controller="UITicketSales" asp-action="List" asp-route-storeId="@storeId" class="btn btn-secondary" role="button">Go to Events</a>
        <button type="submit" form="event-form" class="btn btn-success">@(isEditMode ? "Update Event" : "Create Event")</button>
    </div>
</div>

<partial name="_StatusMessage" />

<form id="event-form" action="@formAction" method="post" enctype="multipart/form-data">
    <div id="ticket-forms">
        @for (var i = 0; i < Model.Count; i++)
        {
            <div class="ticket-form border p-3 mb-3" data-index="@i">
                <button type="button" class="btn-close remove-ticket" onclick="removeTicket(this)" aria-label="Remove"></button>

                <div class="row">
                    <div class="col-sm-10 col-md-9 col-xl-7 col-xxl-6">
                        <div class="form-group">
                            <label asp-for="@Model[i].Name" class="form-label" data-required></label>
                            <input asp-for="@Model[i].Name" class="form-control" required />
                            <span asp-validation-for="@Model[i].Name" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-sm-10 col-md-9 col-xl-7 col-xxl-6">
                        <div class="form-group">
                            <label asp-for="@Model[i].Description" class="form-label"></label>
                            <textarea asp-for="@Model[i].Description" rows="3" class="form-control richtext"></textarea>
                            <span asp-validation-for="@Model[i].Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-sm-10 col-md-9 col-xl-7 col-xxl-6">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="@Model[i].Price" class="form-label" data-required></label>
                                    <input asp-for="@Model[i].Price" class="form-control" required min="1" />
                                    <span asp-validation-for="@Model[i].Price" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="@Model[i].Quantity" class="form-label"></label>
                                    <input asp-for="@Model[i].Quantity" class="form-control" required min="1" />
                                    <span asp-validation-for="@Model[i].Quantity" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</form>

@if (!isEditMode)
{
    <button type="button" class="btn btn-primary fixed-add-button" onclick="addTicket()">Add New</button>
}



@section PageFootContent {
    <script>
        let ticketForms = document.querySelectorAll('.ticket-form');
        let ticketIndex = ticketForms.length;

        function addTicket() {
            let template = `
                <div class="ticket-form border p-3 mb-3" data-index="\${ticketIndex}">
                    <button type="button" class="btn-close remove-ticket" onclick="removeTicket(this)" aria-label="Remove"></button>

                    <div class="row">
                        <div class="col-sm-10 col-md-9 col-xl-7 col-xxl-6">
                            <div class="form-group">
                                <label class="form-label" data-required>Name</label>
                                <input type="text" class="form-control" required name="TicketTypes[\${ticketIndex}].Name"/>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-sm-10 col-md-9 col-xl-7 col-xxl-6">
                            <div class="form-group">
                                <label class="form-label">Description</label>
                                <textarea rows="3" class="form-control richtext" name="TicketTypes[\${ticketIndex}].Description"></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-sm-10 col-md-9 col-xl-7 col-xxl-6">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label" data-required>Price</label>
                                        <input type="number" class="form-control" required min="1" name="TicketTypes[\${ticketIndex}].Price"/>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Quantity</label>
                                        <input type="number" class="form-control" required min="1" name="TicketTypes[\${ticketIndex}].Quantity"/>
                                    </div> 
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;

            document.getElementById('ticket-forms').insertAdjacentHTML('beforeend', template);
        }

        function removeTicket(button) {
            button.closest('.ticket-form').remove();
        }
    </script>
}

